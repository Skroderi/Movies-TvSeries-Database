{"version":3,"sources":["components/Header/Buttons/ToggleButtons.js","components/Header/Buttons/FilterButtons.js","actions/types.js","actions/searchItem.js","components/Header/SearchInput/SearchInput.js","context/index.js","hoc/withContext.js","components/Header/Header.js","templates/Landing.js","components/Card/Card.js","actions/movies.js","components/Background/Background.js","views/Movies.js","actions/tvseries.js","views/Tvseries.js","views/FilterMovies.js","templates/MainTemplate.js","views/FilterTvs.js","actions/itemDetails.js","views/ItemDetails.js","reducers/movies.js","reducers/tvseries.js","reducers/itemDetails.js","reducers/searchedItems.js","reducers/index.js","store/index.js","views/Root.js","index.js"],"names":["ToggleButtons","to","className","activeClassName","FilterButtons","pageType","exact","FETCH_MOVIES","FETCH_POPULAR_MOVIES","FETCH_TOP_MOVIES","FETCH_TVS","FETCH_POPULAR_TVS","FETCH_TOP_TVS","GET_ITEM_DETAILS","SEARCH_ITEM","GET_ITEM_CAST","ApiKey","clearSearchedItems","dispatch","type","connect","state","searchedItems","searchItem","item","value","Api","fetch","then","response","json","data","payload","results","catch","err","console","log","slice","clearData","document","querySelector","placeholder","onChange","e","target","map","id","key","onClick","poster_path","src","alt","style","width","height","original_title","original_name","PageContext","React","createContext","withContext","Component","props","Consumer","context","pageContext","Landing","children","title","poster","rate","release","movieApi","Background","bgc","backgroundImage","movies","fetchMovies","useEffect","trending","length","backdrop_path","movie","release_date","vote_average","tvApi","tvseries","fetchTvs","tvserie","first_air_date","fetchSortedMovies","category","popularMovieApi","pathname","location","filter","page","includes","currentSort","popular","top_rated","sortCategory","MainTemplate","setCurrentPage","prevState","pageTypes","currentPage","setState","setCurrentSortCategory","categoryTypes","currentCategory","this","prevProps","Provider","withRouter","fetchSortedTvs","popularTvApi","tv","itemDetails","getItemDetails","api","castApi","a","error","getItemCast","match","params","window","scrollTo","overview","genres","genre","name","number_of_seasons","number_of_episodes","origin_country","production_countries","country","Math","random","iso_3166_1","videos","video","border","allowFullScreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","sandbox","frameBorder","cast","profile_path","character","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Root","basename","process","path","render","component","Movies","FilterMovies","FilterTvs","ItemDetails","Tvseries","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7080f2f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction ToggleButtons() {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/movies\"\r\n        className=\"header__buttons-button\"\r\n        activeClassName=\"header__buttons-button--active\"\r\n      >\r\n        Movies\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/tvs\"\r\n        className=\"header__buttons-button\"\r\n        activeClassName=\"header__buttons-button--active\"\r\n      >\r\n        TvSeries\r\n      </NavLink>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToggleButtons;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nfunction FilterButtons({ pageType }) {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        exact\r\n        to={`/${pageType}`}\r\n        className=\"header__filterBtns-button\"\r\n        activeClassName=\"header__filterBtns-button--active\"\r\n      >\r\n        Trending\r\n      </NavLink>\r\n      <NavLink\r\n        exact\r\n        to={`/${pageType}/popular`}\r\n        className=\"header__filterBtns-button\"\r\n        activeClassName=\"header__filterBtns-button--active\"\r\n      >\r\n        Popular\r\n      </NavLink>\r\n      <NavLink\r\n        exact\r\n        to={`/${pageType}/top_rated`}\r\n        className=\"header__filterBtns-button\"\r\n        activeClassName=\"header__filterBtns-button--active\"\r\n      >\r\n        Top Rated\r\n      </NavLink>\r\n    </>\r\n  );\r\n}\r\nFilterButtons.propTypes = {\r\n  pageType: PropTypes.string.isRequired\r\n};\r\nexport default FilterButtons;\r\n","export const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const FETCH_POPULAR_MOVIES = \"FETCH_POPULAR_MOVIES\";\r\nexport const FETCH_TOP_MOVIES = \"FETCH_TOP_MOVIES\";\r\nexport const SORT = \"SORT\";\r\nexport const FETCH_TVS = \"FETCH_TVSERIES\";\r\nexport const FETCH_POPULAR_TVS = \"FETCH_POPULAR_TVS\";\r\nexport const FETCH_TOP_TVS = \"FETCH_TOP_TVS\";\r\nexport const GET_ITEM_DETAILS = \"GET_ITEM_DETAILS\";\r\nexport const SEARCH_ITEM = \"SEARCH_ITEM\";\r\nexport const CLEAR_SEARCHED_ITEMS = \"CLEAR_SEARCHED_ITEMS\";\r\nexport const GET_ITEM_CAST = \"GET_ITEM_CAST\";\r\n","import { SEARCH_ITEM, CLEAR_SEARCHED_ITEMS } from \"./types\";\r\nconst ApiKey = \"b53da4cd71ebc2f41acc2d9844e25e62\";\r\n\r\nexport function searchItem(item, value) {\r\n  const Api = `https://api.themoviedb.org/3/search/${item}?api_key=${ApiKey}&query=${value}`;\r\n  return function(dispatch) {\r\n    fetch(Api)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: SEARCH_ITEM,\r\n          payload: data.results\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nexport const clearSearchedItems = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_SEARCHED_ITEMS\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchItem, clearSearchedItems } from \"../../../actions/searchItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SearchInput({\r\n  pageType,\r\n  searchItem,\r\n  searchedItems,\r\n  clearSearchedItems\r\n}) {\r\n  const item = pageType.slice(0, -1);\r\n\r\n  const searchData = e => {\r\n    const value = e.target.value;\r\n    if (value === \"\") {\r\n      clearData();\r\n    } else {\r\n      searchItem(item, value);\r\n    }\r\n  };\r\n\r\n  const clearData = () => {\r\n    clearSearchedItems();\r\n    document.querySelector(\".header__search-bar-input\").value = \"\";\r\n  };\r\n  return (\r\n    <div className=\"header__search-bar\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"header__search-bar-input\"\r\n        placeholder={pageType === \"movies\" ? \"search movie\" : \"search tv serie\"}\r\n        onChange={searchData}\r\n      />\r\n      <ul className=\"search-bar__list\">\r\n        {searchedItems &&\r\n          searchedItems.slice(0, 6).map(item => {\r\n            return (\r\n              <Link\r\n                to={`/${pageType}/${pageType.slice(0, -1)}/${item.id}`}\r\n                key={item.id}\r\n                className=\"search-bar__link\"\r\n                onClick={clearData}\r\n              >\r\n                <li className=\"search-bar__item\">\r\n                  {item.poster_path && (\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\r\n                      alt=\"poster\"\r\n                      style={{ width: \"60px\", height: \"70px\" }}\r\n                    />\r\n                  )}\r\n\r\n                  <span className=\"search-bar__item--title\">\r\n                    {item.original_title\r\n                      ? item.original_title\r\n                      : item.original_name}\r\n                  </span>\r\n                </li>\r\n              </Link>\r\n            );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nSearchInput.propTypes = {\r\n  pageType: PropTypes.string.isRequired,\r\n  searchItem: PropTypes.func.isRequired,\r\n  searchedItems: PropTypes.array.isRequired,\r\n  clearSearchedItems: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchedItems: state.searchedItems\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchItem, clearSearchedItems }\r\n)(SearchInput);\r\n","import React from \"react\";\r\n\r\nconst PageContext = React.createContext(\"movies\");\r\n\r\nexport default PageContext;\r\n","import React from \"react\";\r\nimport PageContext from \"../context\";\r\n\r\nconst withContext = Component => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {context => <Component {...props} pageContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React from \"react\";\r\nimport ToggleButtons from \"./Buttons/ToggleButtons\";\r\nimport FilterButtons from \"./Buttons/FilterButtons\";\r\nimport SearchInput from \"./SearchInput/SearchInput\";\r\nimport withContext from \"../../hoc/withContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Header({ pageContext }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__buttons\">\r\n        <ToggleButtons />\r\n      </div>\r\n      <SearchInput pageType={pageContext.pageType} />\r\n      <div className=\"header__filterBtns\">\r\n        <FilterButtons pageType={pageContext.pageType} />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nHeader.propTypes = {\r\n  pageContext: PropTypes.object.isRequired\r\n};\r\nexport default withContext(Header);\r\n","import React from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Landing({ children }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <main className=\"results\">{children}</main>\r\n    </div>\r\n  );\r\n}\r\nLanding.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport withContext from \"../../hoc/withContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Card({ title, poster, rate, release, id, pageContext }) {\r\n  const item = pageContext.pageType.slice(0, -1);\r\n  return (\r\n    <figure className=\"movie results__movie\">\r\n      <NavLink\r\n        exact\r\n        to={`/${pageContext.pageType}/${item}/${id}`}\r\n        className=\"movie__link\"\r\n      >\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300/${poster}`}\r\n          alt={title}\r\n          className=\"movie__poster\"\r\n        />\r\n\r\n        <div className=\"movie__info\">\r\n          <span className=\"movie__info-header\">{title}</span>\r\n          <p className=\"movie__info-release\">Release:</p>\r\n          <p className=\"movie__info-date\">{release}</p>\r\n          <div className=\"movie__info-rate\">\r\n            <p className=\"info-rate__parapgraph\">Rate:</p>\r\n            <p className=\"minfo-rate__votes\">{rate}</p>\r\n          </div>\r\n        </div>\r\n      </NavLink>\r\n    </figure>\r\n  );\r\n}\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string,\r\n  rate: PropTypes.number,\r\n  release: PropTypes.string,\r\n  id: PropTypes.number.isRequired,\r\n  pageContext: PropTypes.object.isRequired\r\n};\r\nexport default withContext(Card);\r\n","import { FETCH_MOVIES, FETCH_POPULAR_MOVIES, FETCH_TOP_MOVIES } from \"./types\";\r\n\r\n// const movieApi = `https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}`;\r\n// const popularMovieApi = `https://api.themoviedb.org/3/movie/popular?api_key=${ApiKey}`;\r\n// const topRatedMovieApi = `https://api.themoviedb.org/3/movie/top_rated?api_key=${ApiKey}`;\r\n// const popularTvApi = `https://api.themoviedb.org/3/tv/popular?api_key=${ApiKey}`;\r\n// const topRatedTvApi = `https://api.themoviedb.org/3/tv/top_rated?api_key=${ApiKey}`;\r\n// const tvApi = `https://api.themoviedb.org/3/trending/tv/day?api_key=${ApiKey}`;\r\nconst ApiKey = \"b53da4cd71ebc2f41acc2d9844e25e62\";\r\nconst movieApi = `https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}`;\r\n\r\nexport function fetchMovies() {\r\n  return function(dispatch) {\r\n    fetch(movieApi)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: FETCH_MOVIES,\r\n          payload: data.results\r\n        })\r\n      );\r\n  };\r\n}\r\n\r\nexport function fetchSortedMovies(category) {\r\n  const popularMovieApi = `https://api.themoviedb.org/3/movie/${category}?api_key=${ApiKey}`;\r\n  return function(dispatch) {\r\n    fetch(popularMovieApi)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (category === \"popular\") {\r\n          dispatch({\r\n            type: FETCH_POPULAR_MOVIES,\r\n            payload: data.results\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_TOP_MOVIES,\r\n            payload: data.results\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Background({ bgc }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${bgc}')`\r\n      }}\r\n      alt=\"\"\r\n      className=\"container__bg\"\r\n    ></div>\r\n  );\r\n}\r\nBackground.propTypes = {\r\n  bgc: PropTypes.string.isRequired\r\n};\r\nexport default Background;\r\n","import React, { useEffect } from \"react\";\r\nimport Landing from \"../templates/Landing\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { fetchMovies } from \"../actions/movies\";\r\nimport { clearSearchedItems } from \"../actions/searchItem\";\r\nimport { connect } from \"react-redux\";\r\nimport Background from \"../components/Background/Background\";\r\nimport withContext from \"../hoc/withContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movies({ fetchMovies, movies, clearSearchedItems, searchedItems }) {\r\n  useEffect(() => {\r\n    if (movies.trending.length < 1) {\r\n      fetchMovies();\r\n    }\r\n    if (searchedItems.length > 0) {\r\n      document.querySelector(\".header__search-bar-input\").value = \"\";\r\n      clearSearchedItems();\r\n    }\r\n  }, [fetchMovies, movies.trending.length, clearSearchedItems]);\r\n\r\n  return (\r\n    <Landing>\r\n      <Background\r\n        bgc={movies.trending.length > 0 ? movies.trending[0].backdrop_path : \"\"}\r\n      />\r\n      {movies.trending.map(movie => {\r\n        return (\r\n          <Card\r\n            title={movie.original_title}\r\n            release={movie.release_date}\r\n            poster={movie.poster_path}\r\n            rate={movie.vote_average}\r\n            id={movie.id}\r\n            key={movie.id}\r\n          />\r\n        );\r\n      })}\r\n    </Landing>\r\n  );\r\n}\r\n\r\nMovies.propTypes = {\r\n  fetchMovies: PropTypes.func.isRequired,\r\n  movies: PropTypes.object.isRequired,\r\n  searchedItems: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies,\r\n  searchedItems: state.searchedItems\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovies, clearSearchedItems }\r\n)(withContext(Movies));\r\n","import { FETCH_TVS, FETCH_POPULAR_TVS, FETCH_TOP_TVS } from \"./types\";\r\n\r\nconst ApiKey = \"b53da4cd71ebc2f41acc2d9844e25e62\";\r\nconst tvApi = `https://api.themoviedb.org/3/trending/tv/day?api_key=${ApiKey}`;\r\n\r\nexport function fetchTvs() {\r\n  return function(dispatch) {\r\n    fetch(tvApi)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: FETCH_TVS,\r\n          payload: data.results\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nexport function fetchSortedTvs(currentSort) {\r\n  const popularTvApi = `https://api.themoviedb.org/3/tv/${currentSort}?api_key=${ApiKey}`;\r\n  return function(dispatch) {\r\n    fetch(popularTvApi)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (currentSort === \"popular\") {\r\n          dispatch({\r\n            type: FETCH_POPULAR_TVS,\r\n            payload: data.results\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_TOP_TVS,\r\n            payload: data.results\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Landing from \"../templates/Landing\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTvs } from \"../actions/tvseries\";\r\nimport { clearSearchedItems } from \"../actions/searchItem\";\r\nimport Background from \"../components/Background/Background\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Tvseries({ tvseries, fetchTvs, clearSearchedItems, searchedItems }) {\r\n  useEffect(() => {\r\n    if (tvseries.trending.length < 1) {\r\n      fetchTvs();\r\n    }\r\n    if (searchedItems.length > 0) {\r\n      document.querySelector(\".header__search-bar-input\").value = \"\";\r\n      clearSearchedItems();\r\n    }\r\n  }, [fetchTvs, tvseries.trending.length, clearSearchedItems]);\r\n\r\n  return (\r\n    <Landing>\r\n      <Background\r\n        bgc={\r\n          tvseries.trending.length > 0 ? tvseries.trending[0].backdrop_path : \"\"\r\n        }\r\n      />\r\n      {tvseries.trending.map(tvserie => {\r\n        return (\r\n          <Card\r\n            title={tvserie.original_name}\r\n            release={tvserie.first_air_date}\r\n            poster={tvserie.poster_path}\r\n            rate={tvserie.vote_average}\r\n            id={tvserie.id}\r\n            key={tvserie.id}\r\n          />\r\n        );\r\n      })}\r\n    </Landing>\r\n  );\r\n}\r\n\r\nTvseries.propTypes = {\r\n  fetchTvs: PropTypes.func.isRequired,\r\n  tvseries: PropTypes.object.isRequired,\r\n  searchedItems: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tvseries: state.tvseries,\r\n  searchedItems: state.searchedItems\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchTvs, clearSearchedItems }\r\n)(Tvseries);\r\n","import React, { useEffect } from \"react\";\r\nimport Landing from \"../templates/Landing\";\r\nimport Card from \"../components/Card/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchSortedMovies } from \"../actions/movies\";\r\nimport { connect } from \"react-redux\";\r\nimport Background from \"../components/Background/Background\";\r\nimport withContext from \"../hoc/withContext\";\r\n\r\nfunction FilterMovies({\r\n  fetchSortedMovies,\r\n  movies,\r\n  pageContext,\r\n  location: { pathname }\r\n}) {\r\n  useEffect(() => {\r\n    const sortTypes = [\"popular\", \"top_rated\"];\r\n    const [currentSort] = sortTypes.filter(page => pathname.includes(page));\r\n    if (movies.popular.length < 1 || movies.top_rated.length < 1) {\r\n      fetchSortedMovies(currentSort);\r\n    }\r\n  }, [\r\n    fetchSortedMovies,\r\n    pathname,\r\n    movies.popular.length,\r\n    movies.top_rated.length\r\n  ]);\r\n\r\n  return (\r\n    <Landing>\r\n      {pageContext.sortCategory === \"popular\" ? (\r\n        <>\r\n          <Background\r\n            bgc={\r\n              movies.popular.length > 0 ? movies.popular[0].backdrop_path : \"\"\r\n            }\r\n          />\r\n          {movies.popular.map(movie => {\r\n            return (\r\n              <Card\r\n                title={movie.original_title}\r\n                release={movie.release_date}\r\n                poster={movie.poster_path}\r\n                rate={movie.vote_average}\r\n                id={movie.id}\r\n                key={movie.id}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Background\r\n            bgc={\r\n              movies.top_rated.length ? movies.top_rated[0].backdrop_path : \"\"\r\n            }\r\n          />\r\n          {movies.top_rated.map(movie => {\r\n            return (\r\n              <Card\r\n                title={movie.original_title}\r\n                release={movie.release_date}\r\n                poster={movie.poster_path}\r\n                rate={movie.vote_average}\r\n                id={movie.id}\r\n                key={movie.id}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </Landing>\r\n  );\r\n}\r\n\r\nFilterMovies.propTypes = {\r\n  fetchSortedMovies: PropTypes.func.isRequired,\r\n  movies: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchSortedMovies }\r\n)(withContext(FilterMovies));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PageContext from \"../context\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass MainTemplate extends Component {\r\n  state = {\r\n    pageType: \"\",\r\n    sortCategory: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCurrentPage();\r\n    this.setCurrentSortCategory();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.setCurrentPage(prevState);\r\n    this.setCurrentSortCategory(prevState);\r\n  }\r\n\r\n  setCurrentPage = (prevState = \"\") => {\r\n    const pageTypes = [\"movies\", \"tvs\"];\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n\r\n    if (prevState.pageType !== currentPage) {\r\n      this.setState({ pageType: currentPage });\r\n    }\r\n  };\r\n\r\n  setCurrentSortCategory = (prevState = \"\") => {\r\n    const categoryTypes = [\"popular\", \"top_rated\"];\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const [currentCategory] = categoryTypes.filter(category =>\r\n      pathname.includes(category)\r\n    );\r\n\r\n    if (prevState.sortCategory !== currentCategory) {\r\n      this.setState({ sortCategory: currentCategory });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <PageContext.Provider value={this.state}>{children}</PageContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nMainTemplate.propTypes = {\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(MainTemplate);\r\n","import React, { useEffect } from \"react\";\r\nimport Landing from \"../templates/Landing\";\r\nimport Card from \"../components/Card/Card\";\r\nimport { fetchSortedTvs } from \"../actions/tvseries\";\r\nimport { connect } from \"react-redux\";\r\nimport Background from \"../components/Background/Background\";\r\nimport withContext from \"../hoc/withContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FilterTvs({\r\n  fetchSortedTvs,\r\n  tvseries,\r\n  pageContext,\r\n  location: { pathname }\r\n}) {\r\n  useEffect(() => {\r\n    const sortTypes = [\"popular\", \"top_rated\"];\r\n    const [currentSort] = sortTypes.filter(page => pathname.includes(page));\r\n    if (tvseries.popular.length < 1 || tvseries.top_rated.length < 1) {\r\n      fetchSortedTvs(currentSort);\r\n    }\r\n  }, [\r\n    fetchSortedTvs,\r\n    pathname,\r\n    tvseries.popular.length,\r\n    tvseries.top_rated.length\r\n  ]);\r\n\r\n  return (\r\n    <Landing>\r\n      {pageContext.sortCategory === \"popular\" ? (\r\n        <>\r\n          <Background\r\n            bgc={\r\n              tvseries.popular.length > 0\r\n                ? tvseries.popular[0].backdrop_path\r\n                : \"\"\r\n            }\r\n          />\r\n          {tvseries.popular.map(tv => {\r\n            return (\r\n              <Card\r\n                title={tv.original_name}\r\n                release={tv.release_date}\r\n                poster={tv.poster_path}\r\n                rate={tv.vote_average}\r\n                id={tv.id}\r\n                key={tv.id}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Background\r\n            bgc={\r\n              tvseries.top_rated.length > 0\r\n                ? tvseries.top_rated[0].backdrop_path\r\n                : \"\"\r\n            }\r\n          />\r\n          {tvseries.top_rated.map(tv => {\r\n            return (\r\n              <Card\r\n                title={tv.original_name}\r\n                release={tv.release_date}\r\n                poster={tv.poster_path}\r\n                rate={tv.vote_average}\r\n                id={tv.id}\r\n                key={tv.id}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </Landing>\r\n  );\r\n}\r\n\r\nFilterTvs.propTypes = {\r\n  fetchSortedTvs: PropTypes.func.isRequired,\r\n  tvseries: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tvseries: state.tvseries\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchSortedTvs }\r\n)(withContext(FilterTvs));\r\n","import { GET_ITEM_DETAILS, GET_ITEM_CAST } from \"./types\";\r\n\r\nconst ApiKey = \"b53da4cd71ebc2f41acc2d9844e25e62\";\r\n\r\nexport function getItemDetails(item, id) {\r\n  const api = `https://api.themoviedb.org/3/${item}/${id}?api_key=${ApiKey}&append_to_response=videos`;\r\n  const castApi = `https://api.themoviedb.org/3/${item}/${id}/credits?api_key=${ApiKey}`;\r\n  return async function(dispatch) {\r\n    await fetch(api)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: GET_ITEM_DETAILS,\r\n          payload: data\r\n        })\r\n      )\r\n      .catch(error => console.log(error));\r\n\r\n    await fetch(castApi)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: GET_ITEM_CAST,\r\n          payload: data\r\n        })\r\n      )\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\nexport function getItemCast(item, id) {\r\n  const castApi = `https://api.themoviedb.org/3/${item}/${id}/credits?api_key=${ApiKey}`;\r\n  return function(dispatch) {\r\n    fetch(castApi)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        dispatch({\r\n          type: GET_ITEM_CAST,\r\n          payload: data\r\n        })\r\n      )\r\n      .catch(error => console.log(error));\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Landing from \"../templates/Landing\";\r\nimport withContext from \"../hoc/withContext\";\r\nimport { getItemDetails, getItemCast } from \"../actions/itemDetails\";\r\nimport { connect } from \"react-redux\";\r\nimport Background from \"../components/Background/Background\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ItemDetails({\r\n  getItemDetails,\r\n  pageContext,\r\n  match,\r\n  itemDetails,\r\n  location: { pathname }\r\n}) {\r\n  useEffect(() => {\r\n    const pageTypes = [\"movies\", \"tvs\"];\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n    const item = currentPage.slice(0, -1);\r\n    getItemDetails(item, match.params.id);\r\n    window.scrollTo(0, 0);\r\n  }, [pathname, getItemDetails, match.params.id]);\r\n\r\n  return (\r\n    <Landing>\r\n      <Background\r\n        bgc={itemDetails.backdrop_path ? itemDetails.backdrop_path : \"\"}\r\n      />\r\n      <div className=\"movieDetails\">\r\n        <div className=\"movieDetails__poster\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300/${itemDetails.poster_path}`}\r\n            alt=\"\"\r\n            className=\"movieDetails__img\"\r\n          />\r\n        </div>\r\n        <div className=\"movieDesc\">\r\n          <h1 className=\"movieDesc__header\">\r\n            {itemDetails.original_name\r\n              ? itemDetails.original_name\r\n              : itemDetails.original_title}\r\n          </h1>\r\n          <p className=\"movieDesc__overview paragraph\">\r\n            {itemDetails.overview}\r\n          </p>\r\n          <ul className=\"movieDesc__list-items\">\r\n            <li className=\"list_item\">\r\n              <p className=\"list__item-paragraph paragraph\">Genres:</p>\r\n              {itemDetails.genres &&\r\n                itemDetails.genres.map(genre => {\r\n                  return <strong key={genre.id}>{genre.name},</strong>;\r\n                })}\r\n            </li>\r\n            <li className=\"list_item\">\r\n              <p className=\"list__item-paragraph\">Premiere:</p>\r\n              <strong>\r\n                {itemDetails.first_air_date\r\n                  ? itemDetails.first_air_date\r\n                  : itemDetails.release_date}\r\n              </strong>\r\n            </li>\r\n            {pageContext.pageType === \"tvs\" ? (\r\n              <>\r\n                <li className=\"list_item\">\r\n                  <p className=\"list__item-paragraph\">Seasons:</p>\r\n                  <strong>{itemDetails.number_of_seasons}</strong>\r\n                </li>\r\n                <li className=\"list_item\">\r\n                  <p className=\"list__item-paragraph\">Episodes:</p>\r\n                  <strong>{itemDetails.number_of_episodes}</strong>\r\n                </li>\r\n              </>\r\n            ) : null}\r\n\r\n            <li className=\"list_item\">\r\n              <p className=\"list__item-paragraph\">Production:</p>\r\n              <strong>\r\n                {itemDetails.origin_country ? (\r\n                  itemDetails.origin_country\r\n                ) : (\r\n                  <>\r\n                    {itemDetails.production_countries &&\r\n                      itemDetails.production_countries.map(country => {\r\n                        return (\r\n                          <strong key={Math.random() * 10}>\r\n                            {country.iso_3166_1},\r\n                          </strong>\r\n                        );\r\n                      })}\r\n                  </>\r\n                )}\r\n              </strong>\r\n            </li>\r\n            <li className=\"list_item\">\r\n              <p className=\"list__item-paragraph\">Rating:</p>\r\n              <strong>{itemDetails.vote_average}/10</strong>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"movie-videos\">\r\n        <h1 className=\"movie-videos__title\">Trailers</h1>\r\n        {itemDetails.videos &&\r\n          itemDetails.videos.results.slice(0, 2).map(video => {\r\n            return (\r\n              <iframe\r\n                className=\"movie-videos__video\"\r\n                title=\"Trailer\"\r\n                style={{ border: \"none\" }}\r\n                src={\"https://www.youtube.com/embed/\" + video.key}\r\n                key={video.id}\r\n                allowFullScreen=\"allowfullscreen\"\r\n                mozallowfullscreen=\"mozallowfullscreen\"\r\n                msallowfullscreen=\"msallowfullscreen\"\r\n                oallowfullscreen=\"oallowfullscreen\"\r\n                webkitallowfullscreen=\"webkitallowfullscreen\"\r\n                sandbox=\"allow-scripts allow-same-origin allow-presentation\"\r\n                frameBorder=\"0\"\r\n              ></iframe>\r\n            );\r\n          })}\r\n      </div>\r\n      <div className=\"movie-cast\">\r\n        <h1 className=\"movie-cast__title\">Cast</h1>\r\n        {itemDetails.cast &&\r\n          itemDetails.cast.slice(0, 6).map(cast => {\r\n            return (\r\n              <div className=\"movie-cast__item\" key={cast.id}>\r\n                <img\r\n                  className=\"movie-cast__img\"\r\n                  src={`https://image.tmdb.org/t/p/w300/${cast.profile_path}`}\r\n                  alt={cast.name}\r\n                />\r\n                <div className=\"movie-cast__info\">\r\n                  <p className=\"movie-cast__info-name\">\r\n                    <strong>{cast.name}</strong>\r\n                  </p>\r\n                  <p className=\"movie-cast__info-character\">\r\n                    <span>as:</span> {cast.character}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </Landing>\r\n  );\r\n}\r\n\r\nItemDetails.propTypes = {\r\n  getItemDetails: PropTypes.func.isRequired,\r\n  itemDetails: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  itemDetails: state.itemDetails\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItemDetails, getItemCast }\r\n)(withContext(ItemDetails));\r\n","import {\r\n  FETCH_MOVIES,\r\n  FETCH_POPULAR_MOVIES,\r\n  FETCH_TOP_MOVIES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  trending: [],\r\n  popular: [],\r\n  top_rated: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case FETCH_MOVIES:\r\n      return { ...state, trending: payload };\r\n    case FETCH_POPULAR_MOVIES:\r\n      return { ...state, popular: payload };\r\n    case FETCH_TOP_MOVIES:\r\n      return { ...state, top_rated: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_TVS, FETCH_POPULAR_TVS, FETCH_TOP_TVS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  trending: [],\r\n  popular: [],\r\n  top_rated: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case FETCH_TVS:\r\n      return { ...state, trending: payload };\r\n    case FETCH_POPULAR_TVS:\r\n      return { ...state, popular: payload };\r\n    case FETCH_TOP_TVS:\r\n      return { ...state, top_rated: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ITEM_DETAILS, GET_ITEM_CAST } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_ITEM_DETAILS:\r\n      return { ...payload };\r\n    case GET_ITEM_CAST:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SEARCH_ITEM, CLEAR_SEARCHED_ITEMS } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SEARCH_ITEM:\r\n      return [...payload];\r\n    case CLEAR_SEARCHED_ITEMS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport movies from \"./movies\";\r\nimport tvseries from \"./tvseries\";\r\nimport itemDetails from \"./itemDetails\";\r\nimport searchedItems from \"./searchedItems\";\r\nexport default combineReducers({\r\n  movies,\r\n  tvseries,\r\n  itemDetails,\r\n  searchedItems\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n// CSS\nimport \"../stylesheet/Main.scss\";\n\n// Components\nimport Movies from \"./Movies\";\nimport Tvseries from \"./Tvseries\";\nimport FilterMovies from \"./FilterMovies\";\nimport MainTemplate from \"../templates/MainTemplate\";\nimport FilterTvs from \"./FilterTvs\";\nimport ItemDetails from \"./ItemDetails\";\n\n// REDUX\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <MainTemplate>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/movies\" />} />\n            <Route exact path=\"/movies\" component={Movies} />\n            <Route exact path=\"/movies/popular\" component={FilterMovies} />\n            <Route exact path=\"/movies/top_rated\" component={FilterMovies} />\n            <Route exact path=\"/tvs/popular\" component={FilterTvs} />\n            <Route exact path=\"/tvs/top_rated\" component={FilterTvs} />\n            <Route path=\"/movies/movie/:id\" component={ItemDetails} />\n            <Route path=\"/tvs/tv/:id\" component={ItemDetails} />\n            <Route exact path=\"/tvs\" component={Tvseries} />\n          </Switch>\n        </MainTemplate>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./views/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}